{"version":3,"file":"v-trend.esm.js","sources":["../src/smooth.js","../src/v-trend.vue","../src/index.js"],"sourcesContent":["// https://gielberkers.com/drawing-a-smooth-bezier-line-through-several-points/\nconst calc = function (points, i) {\n  const pCurr = points[i];\n  const pNext = points[i + 1] || points[i - 1];\n  const pNeNe = points[i + 2] || points[i - 2];\n  const dirX  = pNeNe['x'] - pCurr['x'];\n  const dirY  = pNeNe['y'] - pCurr['y'];\n  const distance = Math.sqrt(\n    Math.pow(dirX, 2) + Math.pow(dirY, 2)\n  );\n  const unitX = dirX / distance;\n  const unitY = dirY / distance;\n  const normal1 = { x: -unitY, y: unitX };\n  const normal2 = { x: unitY, y: -unitX };\n  const normal = i < points.length - 2 ? normal1 : normal2;\n  const angle = Math.atan2(normal['y'], normal['x']) + Math.PI / 2;\n\n  const s = 9;\n\n  return {\n    x: pNext['x'] + Math.cos(angle) * (distance / s),\n    y: pNext['y'] + Math.sin(angle) * (distance / s)\n  }\n};\n\nexport default function getSmoothPath(points) {\n  let path = `M `;\n  for (var i = 0; i < points.length - 1; i++) {\n    let elem = points[i];\n    let ctrl = calc(points, i);\n    path += `${elem.x} ${elem.y} S ${ctrl.x} ${ctrl.y} `;\n  }\n  let elem = points[points.length - 1];\n  path += `${elem.x} ${elem.y}`;\n  return path;\n};\n","<template lang=\"pug\">\nsvg(\n  :viewBox=\"viewBox\",\n  style=\"width:100%;height:100%\"\n)\n  defs\n    linearGradient(\n      :id=\"gradId\",\n      x1=\"0\",\n      x2=\"0\",\n      y1=\"1\",\n      y2=\"0\"\n    )\n      stop(\n        v-for=\"(stop,index) in stops\" :key=\"index\",\n        :offset=\"stop.offset\",\n        :stop-color=\"stop.color\"\n      )\n    mask(\n      :id=\"maskId\",\n      x=\"0\",\n      y=\"0\",\n      width=\"100%\",\n      height=\"100%\"\n    )\n      polyline(\n        v-if=\"!isSmooth\",\n        :points=\"path\",\n        :stroke-width=\"strokeWidth\",\n        fill=\"transparent\",\n        stroke=\"#8cc665\",\n        ref=\"path\"\n      )\n      path(\n        v-if=\"isSmooth\",\n        :d=\"path\",\n        :stroke-width=\"strokeWidth\",\n        fill=\"transparent\",\n        stroke=\"#8cc665\",\n        ref=\"path\"\n      )\n  g\n    rect(\n      :style=\"rectStyle\",\n      x=\"0\",\n      y=\"0\",\n      width=\"100%\",\n      height=\"100%\"\n    )\n</template>\n\n<script>\nimport getSmoothPath from './smooth.js';\nlet uid = 0;\nconst prefix = 'vTrEnD';\nconst defaultColors = [\n  '#c6e48b',\n  '#7bc96f',\n  '#239a3b',\n  '#196127'\n];\nconst percent = n => (n * 100) + '%';\nconst toFixed = (n, d = 2) => +n.toFixed(d);\n\nexport default {\n  name: 'v-trend',\n  props: {\n    width: {\n      type: Number\n    },\n    height: {\n      type: Number\n    },\n    strokeWidth: {\n      type: Number,\n      default: 2.0\n    },\n    padding: {\n      type: Number,\n      default: 5\n    },\n    gradients: {\n      type: Array,\n      default() {\n        return defaultColors.slice(0);\n      }\n    },\n    smooth: {\n      type: Boolean,\n      default: false\n    },\n    data: {\n      type: Array,\n      default() {\n        return [];\n      }\n    },\n  },\n  data() {\n    const gradId = `${prefix}-grad-${uid++}`;\n    const maskId = `${prefix}-mask-${uid++}`;\n    return {\n      gradId,\n      maskId,\n      rectStyle: {\n        stroke: 'none',\n        fill: `url(#${gradId})`,\n        mask: `url(#${maskId})`\n      }\n    };\n  },\n  computed: {\n    isSmooth() {\n      return this.smooth && this.data.length > 2;\n    },\n    stops() {\n      const divider = this.gradients.length - 1;\n      return this.gradients.map((color, i) => ({\n        color,\n        offset: percent(i / divider)\n      }));\n    },\n    points() {\n      const p = this.padding;\n      const w = this.width  - p * 2;\n      const h = this.height - p * 2;\n      const s = this.strokeWidth;\n      const data = this.data.length >= 2 ? this.data : [this.data[0] || 0, 0, 0];\n      const yMin = Math.min.apply(Math, data) - s/2;\n      const yMax = Math.max.apply(Math, data) + s/2;\n      const xUnit = w / data.length;\n      const yUnit = h / (yMax - yMin);\n\n      return data.map((d, i) => {\n          const x = toFixed(i * xUnit, 5) + p;\n          const y = toFixed(h - (d - yMin)* yUnit, 5) + p;\n          return { x, y };\n        });\n    },\n    viewBox() {\n      const w = this.width;\n      const h = this.height;\n      return `0 0 ${w} ${h}`;\n    },\n    path() {\n      return this.makePath(this.points);\n    }\n  },\n  methods: {\n    makePath(points) {\n      if (this.isSmooth) {\n        return getSmoothPath(points);\n      } else {\n        return points\n          .map(({x, y}) => `${x},${y}`)\n          .join(' ');\n      }\n    }\n  }\n};\n</script>\n","import VTrendComp from './v-trend.vue';\n\nVTrendComp.install =  Vue => {\n  Vue.component(VTrendComp.name, VTrendComp);\n};\n\nif (window.Vue && Vue.use) {\n  window.Vue.use(VTrendComp);\n}\n\nexport default VTrendComp;\n"],"names":["const","let","elem","VTrendComp"],"mappings":"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"}